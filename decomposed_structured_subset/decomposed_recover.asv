function [x_out] = decomposed_recover(x, info)
%DECOMPOSED_RECOVER Recover the optimum solution of a decomposed structured
%subset.
%
%Input:
%   x: vector of input that was previously 

x_out = sparse(info.prev_var, 1);

count_dd = info.count_dd;
%free and linear variables before conversion
x_out(1:count_dd) = x(1:count_dd);


%diagonally dominant cone
for i = 1:length(info.dd)
    info_curr = info.dd{i};
    
    range_curr = count_dd + (1:info_curr.num_var);
    
    x_dd = x(range_curr);
    
    x_out(info_curr.ind_orig) = info_curr.rays * x_dd;
    count_dd = count_dd + info_curr.num_var;
end

%second order cone variables from original problem

x_out(info.count_dd:info.count_non_dd)

%Factor Width Cones
count_non_dd = info.count_non_dd;
for i = 1:length(info.non_dd)

    info_curr = info.dd{i};
    if isfield(
    x_out(ind_orig) = 0;
end
